{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gonca\\\\Documents\\\\Curso\\\\MDM\\\\DW\\\\solo_project\\\\webdev-solo-project-app\\\\src\\\\Component\\\\PatternDraw.js\",\n  _s = $RefreshSig$();\nimport { useOnDraw } from './Hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PatternDraw = ({\n  width,\n  height\n}) => {\n  _s();\n  const {\n    setCanvasRef,\n    onCanvasMouseDown\n  } = useOnDraw(onDraw);\n  function onDraw(ctx, point, prevPoint) {\n    drawLine(prevPoint, point, ctx, '#000000', 30);\n  }\n  function drawLine(start, end, ctx, color, width) {\n    var _start;\n    start = (_start = start) !== null && _start !== void 0 ? _start : end;\n    ctx.beginPath();\n    ctx.lineWidth = width;\n    ctx.strokeStyle = color;\n    ctx.moveTo(start.x, start.y);\n    ctx.lineTo(end.x, end.y);\n    ctx.stroke();\n    ctx.fillStyle = color;\n    ctx.beginPath();\n    ctx.arc(start.x, start.y, 2, 0, 2 * Math.PI);\n    ctx.fill();\n  }\n  function clearCanvas() {\n    const canvas = document.querySelector('canvas'); // Get the canvas element\n    const ctx = canvas.getContext('2d'); // Get the 2D rendering context\n\n    // Clear the entire canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      width: width,\n      height: height,\n      onMouseDown: onCanvasMouseDown,\n      ref: setCanvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"canvas-button\",\n      onClick: clearCanvas,\n      children: \"limpar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(PatternDraw, \"ZkKPhkglNhce9tYR9AjV3i0DCcE=\", false, function () {\n  return [useOnDraw];\n});\n_c = PatternDraw;\nexport default PatternDraw;\nvar _c;\n$RefreshReg$(_c, \"PatternDraw\");","map":{"version":3,"names":["useOnDraw","jsxDEV","_jsxDEV","PatternDraw","width","height","_s","setCanvasRef","onCanvasMouseDown","onDraw","ctx","point","prevPoint","drawLine","start","end","color","_start","beginPath","lineWidth","strokeStyle","moveTo","x","y","lineTo","stroke","fillStyle","arc","Math","PI","fill","clearCanvas","canvas","document","querySelector","getContext","clearRect","children","onMouseDown","ref","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","_c","$RefreshReg$"],"sources":["C:/Users/gonca/Documents/Curso/MDM/DW/solo_project/webdev-solo-project-app/src/Component/PatternDraw.js"],"sourcesContent":["import {useOnDraw} from './Hooks';\r\n\r\nconst PatternDraw = ({\r\n    width,\r\n    height\r\n}) => {\r\n\r\n    const {\r\n        setCanvasRef,\r\n        onCanvasMouseDown\r\n    } = useOnDraw(onDraw);\r\n\r\n    function onDraw(ctx, point, prevPoint) {\r\n        drawLine(prevPoint, point, ctx, '#000000', 30);\r\n    }\r\n\r\n    function drawLine(\r\n        start,\r\n        end,\r\n        ctx,\r\n        color,\r\n        width\r\n    ) {\r\n        start = start ?? end;\r\n        ctx.beginPath();\r\n        ctx.lineWidth = width;\r\n        ctx.strokeStyle = color;\r\n        ctx.moveTo(start.x, start.y);\r\n        ctx.lineTo(end.x, end.y);\r\n        ctx.stroke();\r\n\r\n        ctx.fillStyle = color;\r\n        ctx.beginPath();\r\n        ctx.arc(start.x, start.y, 2, 0, 2 * Math.PI);\r\n        ctx.fill();\r\n\r\n    }\r\n\r\n    function clearCanvas() {\r\n        const canvas = document.querySelector('canvas'); // Get the canvas element\r\n        const ctx = canvas.getContext('2d'); // Get the 2D rendering context\r\n    \r\n        // Clear the entire canvas\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    }\r\n\r\n    return(\r\n        <div>\r\n        <canvas\r\n            width={width}\r\n            height={height}\r\n            onMouseDown={onCanvasMouseDown}\r\n            ref={setCanvasRef}\r\n        />\r\n        <button className=\"canvas-button\" onClick={clearCanvas}>limpar</button>\r\n        \r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default PatternDraw;"],"mappings":";;AAAA,SAAQA,SAAS,QAAO,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,WAAW,GAAGA,CAAC;EACjBC,KAAK;EACLC;AACJ,CAAC,KAAK;EAAAC,EAAA;EAEF,MAAM;IACFC,YAAY;IACZC;EACJ,CAAC,GAAGR,SAAS,CAACS,MAAM,CAAC;EAErB,SAASA,MAAMA,CAACC,GAAG,EAAEC,KAAK,EAAEC,SAAS,EAAE;IACnCC,QAAQ,CAACD,SAAS,EAAED,KAAK,EAAED,GAAG,EAAE,SAAS,EAAE,EAAE,CAAC;EAClD;EAEA,SAASG,QAAQA,CACbC,KAAK,EACLC,GAAG,EACHL,GAAG,EACHM,KAAK,EACLZ,KAAK,EACP;IAAA,IAAAa,MAAA;IACEH,KAAK,IAAAG,MAAA,GAAGH,KAAK,cAAAG,MAAA,cAAAA,MAAA,GAAIF,GAAG;IACpBL,GAAG,CAACQ,SAAS,CAAC,CAAC;IACfR,GAAG,CAACS,SAAS,GAAGf,KAAK;IACrBM,GAAG,CAACU,WAAW,GAAGJ,KAAK;IACvBN,GAAG,CAACW,MAAM,CAACP,KAAK,CAACQ,CAAC,EAAER,KAAK,CAACS,CAAC,CAAC;IAC5Bb,GAAG,CAACc,MAAM,CAACT,GAAG,CAACO,CAAC,EAAEP,GAAG,CAACQ,CAAC,CAAC;IACxBb,GAAG,CAACe,MAAM,CAAC,CAAC;IAEZf,GAAG,CAACgB,SAAS,GAAGV,KAAK;IACrBN,GAAG,CAACQ,SAAS,CAAC,CAAC;IACfR,GAAG,CAACiB,GAAG,CAACb,KAAK,CAACQ,CAAC,EAAER,KAAK,CAACS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAGK,IAAI,CAACC,EAAE,CAAC;IAC5CnB,GAAG,CAACoB,IAAI,CAAC,CAAC;EAEd;EAEA,SAASC,WAAWA,CAAA,EAAG;IACnB,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC;IACjD,MAAMxB,GAAG,GAAGsB,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;;IAErC;IACAzB,GAAG,CAAC0B,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEJ,MAAM,CAAC5B,KAAK,EAAE4B,MAAM,CAAC3B,MAAM,CAAC;EACpD;EAEA,oBACIH,OAAA;IAAAmC,QAAA,gBACAnC,OAAA;MACIE,KAAK,EAAEA,KAAM;MACbC,MAAM,EAAEA,MAAO;MACfiC,WAAW,EAAE9B,iBAAkB;MAC/B+B,GAAG,EAAEhC;IAAa;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC,eACFzC,OAAA;MAAQ0C,SAAS,EAAC,eAAe;MAACC,OAAO,EAAEd,WAAY;MAAAM,QAAA,EAAC;IAAM;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAElE,CAAC;AAGd,CAAC;AAAArC,EAAA,CAzDKH,WAAW;EAAA,QAQTH,SAAS;AAAA;AAAA8C,EAAA,GARX3C,WAAW;AA2DjB,eAAeA,WAAW;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}