{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gonca\\\\Documents\\\\Curso\\\\MDM\\\\DW\\\\webdev-solo-project\\\\webdev-solo-project-app\\\\src\\\\Component\\\\PatternDraw.js\",\n  _s = $RefreshSig$();\nimport { useOnDraw } from './Hooks';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PatternDraw = ({\n  width,\n  height\n}) => {\n  _s();\n  const {\n    setCanvasRef,\n    onCanvasMouseDown\n  } = useOnDraw(onDraw);\n  const [currentColor, setCurrentColor] = useState('#ff312e');\n  const [drawings, setDrawings] = useState([]); // State to store drawings\n\n  useEffect(() => {\n    // Load saved drawings from localStorage when the component mounts\n    const savedDrawings = JSON.parse(localStorage.getItem('drawings'));\n    if (savedDrawings) {\n      setDrawings(savedDrawings);\n    }\n    clearCanvas();\n  }, []);\n  function onDraw(ctx, point, prevPoint) {\n    drawLine(prevPoint, point, ctx, currentColor, 30);\n  }\n  function drawLine(start, end, ctx, color, width) {\n    var _start;\n    start = (_start = start) !== null && _start !== void 0 ? _start : end;\n    ctx.beginPath();\n    ctx.lineWidth = width;\n    ctx.strokeStyle = color;\n    ctx.moveTo(start.x, start.y);\n    ctx.lineTo(end.x, end.y);\n    ctx.stroke();\n    ctx.fillStyle = color;\n    ctx.beginPath();\n    ctx.arc(start.x, start.y, 2, 0, 2 * Math.PI);\n    ctx.fill();\n  }\n  function clearCanvas() {\n    const canvas = document.querySelector('canvas');\n    const ctx = canvas.getContext('2d');\n    ctx.fillStyle = '#fffffc'; // Set to white\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n  }\n  function changeColor(newColor) {\n    setCurrentColor(newColor);\n  }\n  function deleteDrawing(index) {\n    // Remove the drawing at the specified index from the array\n    const updatedDrawings = [...drawings];\n    updatedDrawings.splice(index, 1);\n    setDrawings(updatedDrawings);\n\n    // Update localStorage to reflect the changes\n    localStorage.setItem('drawings', JSON.stringify(updatedDrawings));\n  }\n  function saveDrawing() {\n    const canvas = document.querySelector('canvas'); // Get the canvas element\n\n    if (canvas) {\n      const svgData = canvas.toDataURL('image/svg+xml');\n      const updatedDrawings = [...drawings, svgData];\n      if (updatedDrawings.length > 4) {\n        // If there are more than 2 drawings, remove the oldest one\n        updatedDrawings.shift();\n      }\n      setDrawings(updatedDrawings);\n\n      // Save the updated drawings to localStorage\n      localStorage.setItem('drawings', JSON.stringify(updatedDrawings));\n      clearCanvas();\n    }\n  }\n  function isCanvasBlank(canvas) {\n    const context = canvas.getContext('2d');\n    const imageData = context.getImageData(0, 0, canvas.width, canvas.height).data;\n\n    // Check if every pixel is equal to the color #fffffc\n    for (let i = 0; i < imageData.length; i += 4) {\n      const red = imageData[i];\n      const green = imageData[i + 1];\n      const blue = imageData[i + 2];\n      const alpha = imageData[i + 3];\n      if (red !== 255 || green !== 255 || blue !== 252 || alpha !== 255) {\n        return false;\n      }\n    }\n    return true;\n  }\n  function clearArray() {\n    setDrawings([]);\n  }\n  function done() {\n    const canvas = document.querySelector('canvas'); // Get the canvas element\n    if (!isCanvasBlank(canvas)) {\n      saveDrawing();\n      console.log(\"is blank!\");\n    }\n    window.location.href = '/';\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        width: width,\n        height: height,\n        onMouseDown: onCanvasMouseDown,\n        ref: setCanvasRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"canvas-button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"canvas-button\",\n          onClick: saveDrawing,\n          children: \"add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"canvas-button\",\n          onClick: clearCanvas,\n          children: \"clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"canvas-button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"canvas-button\",\n          style: {\n            color: '#ff312e'\n          },\n          onClick: () => changeColor('#ff312e'),\n          children: \"red\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"canvas-button\",\n          style: {\n            color: '#688e26'\n          },\n          onClick: () => changeColor('#688e26'),\n          children: \"green\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"canvas-button\",\n          style: {\n            color: '#008dd5'\n          },\n          onClick: () => changeColor('#008dd5'),\n          children: \"blue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"canvas-button\",\n          style: {\n            color: '#111111'\n          },\n          onClick: () => changeColor('#111111'),\n          children: \"black\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"canvas-button\",\n          onClick: () => changeColor('#fffffc'),\n          children: \"eraser\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"canvas-button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"canvas-button\",\n          onClick: clearArray,\n          children: \"clear all\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"canvas-button\",\n          onClick: done,\n          children: \"done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center'\n        },\n        children: drawings.slice(0, 2).map((drawing, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"saved-patterns\",\n            src: drawing,\n            alt: `Saved Drawing ${index}`,\n            onClick: () => deleteDrawing(index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 21\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center'\n        },\n        children: drawings.slice(2).map((drawing, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"saved-patterns\",\n            src: drawing,\n            alt: `Saved Drawing ${index + 2}`,\n            onClick: () => deleteDrawing(index + 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 21\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 9\n  }, this);\n};\n_s(PatternDraw, \"xaS2M9DZnkrJThU8/Hr8bLeGdLE=\", false, function () {\n  return [useOnDraw];\n});\n_c = PatternDraw;\nexport default PatternDraw;\nvar _c;\n$RefreshReg$(_c, \"PatternDraw\");","map":{"version":3,"names":["useOnDraw","useState","useEffect","jsxDEV","_jsxDEV","PatternDraw","width","height","_s","setCanvasRef","onCanvasMouseDown","onDraw","currentColor","setCurrentColor","drawings","setDrawings","savedDrawings","JSON","parse","localStorage","getItem","clearCanvas","ctx","point","prevPoint","drawLine","start","end","color","_start","beginPath","lineWidth","strokeStyle","moveTo","x","y","lineTo","stroke","fillStyle","arc","Math","PI","fill","canvas","document","querySelector","getContext","fillRect","changeColor","newColor","deleteDrawing","index","updatedDrawings","splice","setItem","stringify","saveDrawing","svgData","toDataURL","length","shift","isCanvasBlank","context","imageData","getImageData","data","i","red","green","blue","alpha","clearArray","done","console","log","window","location","href","style","display","children","onMouseDown","ref","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","justifyContent","flexDirection","alignItems","slice","map","drawing","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/gonca/Documents/Curso/MDM/DW/webdev-solo-project/webdev-solo-project-app/src/Component/PatternDraw.js"],"sourcesContent":["import { useOnDraw } from './Hooks';\r\nimport { useState, useEffect } from 'react';\r\n\r\n\r\nconst PatternDraw = ({ width, height }) => {\r\n    const { setCanvasRef, onCanvasMouseDown } = useOnDraw(onDraw);\r\n    const [currentColor, setCurrentColor] = useState('#ff312e');\r\n    const [drawings, setDrawings] = useState([]); // State to store drawings\r\n\r\n    useEffect(() => {\r\n        // Load saved drawings from localStorage when the component mounts\r\n        const savedDrawings = JSON.parse(localStorage.getItem('drawings'));\r\n        if (savedDrawings) {\r\n            setDrawings(savedDrawings);\r\n        }\r\n\r\n        clearCanvas();\r\n    }, []);\r\n\r\n    function onDraw(ctx, point, prevPoint) {\r\n        drawLine(prevPoint, point, ctx, currentColor, 30);\r\n    }\r\n\r\n    function drawLine(start, end, ctx, color, width) {\r\n        start = start ?? end;\r\n        ctx.beginPath();\r\n        ctx.lineWidth = width;\r\n        ctx.strokeStyle = color;\r\n        ctx.moveTo(start.x, start.y);\r\n        ctx.lineTo(end.x, end.y);\r\n        ctx.stroke();\r\n\r\n        ctx.fillStyle = color;\r\n        ctx.beginPath();\r\n        ctx.arc(start.x, start.y, 2, 0, 2 * Math.PI);\r\n        ctx.fill();\r\n    }\r\n\r\n    function clearCanvas() {\r\n        const canvas = document.querySelector('canvas');\r\n        const ctx = canvas.getContext('2d');\r\n        ctx.fillStyle = '#fffffc'; // Set to white\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n    }\r\n\r\n    function changeColor(newColor) {\r\n        setCurrentColor(newColor);\r\n    }\r\n\r\n    function deleteDrawing(index) {\r\n        // Remove the drawing at the specified index from the array\r\n        const updatedDrawings = [...drawings];\r\n        updatedDrawings.splice(index, 1);\r\n        setDrawings(updatedDrawings);\r\n\r\n        // Update localStorage to reflect the changes\r\n        localStorage.setItem('drawings', JSON.stringify(updatedDrawings));\r\n    }\r\n\r\n    function saveDrawing() {\r\n        const canvas = document.querySelector('canvas'); // Get the canvas element\r\n\r\n        if (canvas) {\r\n            const svgData = canvas.toDataURL('image/svg+xml');\r\n            const updatedDrawings = [...drawings, svgData];\r\n\r\n            if (updatedDrawings.length > 4) {\r\n                // If there are more than 2 drawings, remove the oldest one\r\n                updatedDrawings.shift();\r\n            }\r\n\r\n            setDrawings(updatedDrawings);\r\n\r\n            // Save the updated drawings to localStorage\r\n            localStorage.setItem('drawings', JSON.stringify(updatedDrawings));\r\n\r\n            clearCanvas();\r\n        }\r\n    }\r\n\r\n    function isCanvasBlank(canvas) {\r\n        const context = canvas.getContext('2d');\r\n        const imageData = context.getImageData(0, 0, canvas.width, canvas.height).data;\r\n      \r\n        // Check if every pixel is equal to the color #fffffc\r\n        for (let i = 0; i < imageData.length; i += 4) {\r\n          const red = imageData[i];\r\n          const green = imageData[i + 1];\r\n          const blue = imageData[i + 2];\r\n          const alpha = imageData[i + 3];\r\n      \r\n          if (red !== 255 || green !== 255 || blue !== 252 || alpha !== 255) {\r\n            return false;\r\n          }\r\n        }\r\n      \r\n        return true;\r\n    }\r\n\r\n    function clearArray(){\r\n        setDrawings([]);\r\n    }\r\n\r\n    function done(){\r\n        const canvas = document.querySelector('canvas'); // Get the canvas element\r\n        if(!isCanvasBlank(canvas)){\r\n            saveDrawing();\r\n            console.log(\"is blank!\");\r\n        } \r\n        window.location.href = '/';\r\n    }\r\n\r\n    return (\r\n        <div style={{ display: 'flex' }}>\r\n            <div>\r\n                <canvas\r\n                    width={width}\r\n                    height={height}\r\n                    onMouseDown={onCanvasMouseDown}\r\n                    ref={setCanvasRef}\r\n                />\r\n                <div className='canvas-button-container'>\r\n                <button className=\"canvas-button\" onClick={saveDrawing}>\r\n                        add\r\n                    </button>\r\n                    <button className=\"canvas-button\" onClick={clearCanvas}>\r\n                        clear\r\n                    </button>                  \r\n                </div>\r\n                <div className='canvas-button-container'>\r\n                    <button className=\"canvas-button\" style={{color: '#ff312e' }} onClick={() => changeColor('#ff312e')}>\r\n                        red\r\n                    </button>\r\n                    <button className=\"canvas-button\" style={{color: '#688e26' }} onClick={() => changeColor('#688e26')}>\r\n                        green\r\n                    </button>\r\n                    <button className=\"canvas-button\" style={{color: '#008dd5' }} onClick={() => changeColor('#008dd5')}>\r\n                        blue\r\n                    </button>\r\n                    <button className=\"canvas-button\" style={{color: '#111111' }} onClick={() => changeColor('#111111')}>\r\n                        black\r\n                    </button>\r\n                    <button className=\"canvas-button\" onClick={() => changeColor('#fffffc')}>\r\n                        eraser\r\n                    </button>\r\n                </div>\r\n                <div className='canvas-button-container'>\r\n                    <button className=\"canvas-button\" onClick={clearArray}>\r\n                        clear all\r\n                    </button>\r\n                    <button className=\"canvas-button\" onClick={done}>\r\n                        done\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n                {drawings.slice(0, 2).map((drawing, index) => (\r\n                <div key={index} style={{ display: 'flex', alignItems: 'center' }}>\r\n                    <img\r\n                    className='saved-patterns'\r\n                    src={drawing}\r\n                    alt={`Saved Drawing ${index}`}\r\n                    onClick={() => deleteDrawing(index)}\r\n                    />\r\n                </div>\r\n                ))}\r\n            </div>\r\n            <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n                {drawings.slice(2).map((drawing, index) => (\r\n                <div key={index} style={{ display: 'flex', alignItems: 'center' }}>\r\n                    <img\r\n                    className='saved-patterns'\r\n                    src={drawing}\r\n                    alt={`Saved Drawing ${index + 2}`}\r\n                    onClick={() => deleteDrawing(index + 2)}\r\n                    />\r\n                </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default PatternDraw;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}