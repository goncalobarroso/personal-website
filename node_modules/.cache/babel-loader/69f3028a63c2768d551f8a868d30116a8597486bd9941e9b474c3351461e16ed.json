{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gonca\\\\Documents\\\\Curso\\\\MDM\\\\DW\\\\solo_project\\\\webdev-solo-project-app\\\\src\\\\Component\\\\PatternDraw.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DrawingCanvas = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const contextRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    contextRef.current = context;\n    canvas.width = 500;\n    canvas.height = 500;\n    context.strokeStyle = 'black';\n    context.lineWidth = 2;\n    const startDrawing = e => {\n      setIsDrawing(true);\n      const {\n        offsetX,\n        offsetY\n      } = e.nativeEvent;\n      contextRef.current.beginPath();\n      contextRef.current.moveTo(offsetX, offsetY);\n    };\n    const endDrawing = () => {\n      setIsDrawing(false);\n      contextRef.current.closePath();\n    };\n    const draw = e => {\n      if (!isDrawing) return;\n      const {\n        offsetX,\n        offsetY\n      } = e.nativeEvent;\n      contextRef.current.lineTo(offsetX, offsetY);\n      contextRef.current.stroke();\n    };\n    canvas.addEventListener('mousedown', startDrawing);\n    canvas.addEventListener('mouseup', endDrawing);\n    canvas.addEventListener('mousemove', draw);\n    return () => {\n      canvas.removeEventListener('mousedown', startDrawing);\n      canvas.removeEventListener('mouseup', endDrawing);\n      canvas.removeEventListener('mousemove', draw);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    style: {\n      border: '1px solid black'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(DrawingCanvas, \"TaBTfSwaRPnZ0Ahtc7nGo+Uh19o=\");\n_c = DrawingCanvas;\nexport default DrawingCanvas;\nvar _c;\n$RefreshReg$(_c, \"DrawingCanvas\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","DrawingCanvas","_s","canvasRef","isDrawing","setIsDrawing","contextRef","canvas","current","context","getContext","width","height","strokeStyle","lineWidth","startDrawing","e","offsetX","offsetY","nativeEvent","beginPath","moveTo","endDrawing","closePath","draw","lineTo","stroke","addEventListener","removeEventListener","ref","style","border","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/gonca/Documents/Curso/MDM/DW/solo_project/webdev-solo-project-app/src/Component/PatternDraw.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\n\r\nconst DrawingCanvas = () => {\r\n  const canvasRef = useRef(null);\r\n  const [isDrawing, setIsDrawing] = useState(false);\r\n  const contextRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const context = canvas.getContext('2d');\r\n    contextRef.current = context;\r\n\r\n    canvas.width = 500;\r\n    canvas.height = 500;\r\n\r\n    context.strokeStyle = 'black';\r\n    context.lineWidth = 2;\r\n\r\n    const startDrawing = (e) => {\r\n      setIsDrawing(true);\r\n      const { offsetX, offsetY } = e.nativeEvent;\r\n      contextRef.current.beginPath();\r\n      contextRef.current.moveTo(offsetX, offsetY);\r\n    };\r\n\r\n    const endDrawing = () => {\r\n      setIsDrawing(false);\r\n      contextRef.current.closePath();\r\n    };\r\n\r\n    const draw = (e) => {\r\n      if (!isDrawing) return;\r\n      const { offsetX, offsetY } = e.nativeEvent;\r\n      contextRef.current.lineTo(offsetX, offsetY);\r\n      contextRef.current.stroke();\r\n    };\r\n\r\n    canvas.addEventListener('mousedown', startDrawing);\r\n    canvas.addEventListener('mouseup', endDrawing);\r\n    canvas.addEventListener('mousemove', draw);\r\n\r\n    return () => {\r\n      canvas.removeEventListener('mousedown', startDrawing);\r\n      canvas.removeEventListener('mouseup', endDrawing);\r\n      canvas.removeEventListener('mousemove', draw);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <canvas\r\n      ref={canvasRef}\r\n      style={{ border: '1px solid black' }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DrawingCanvas;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAMC,SAAS,GAAGN,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMU,UAAU,GAAGT,MAAM,CAAC,IAAI,CAAC;EAE/BC,SAAS,CAAC,MAAM;IACd,MAAMS,MAAM,GAAGJ,SAAS,CAACK,OAAO;IAChC,MAAMC,OAAO,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;IACvCJ,UAAU,CAACE,OAAO,GAAGC,OAAO;IAE5BF,MAAM,CAACI,KAAK,GAAG,GAAG;IAClBJ,MAAM,CAACK,MAAM,GAAG,GAAG;IAEnBH,OAAO,CAACI,WAAW,GAAG,OAAO;IAC7BJ,OAAO,CAACK,SAAS,GAAG,CAAC;IAErB,MAAMC,YAAY,GAAIC,CAAC,IAAK;MAC1BX,YAAY,CAAC,IAAI,CAAC;MAClB,MAAM;QAAEY,OAAO;QAAEC;MAAQ,CAAC,GAAGF,CAAC,CAACG,WAAW;MAC1Cb,UAAU,CAACE,OAAO,CAACY,SAAS,CAAC,CAAC;MAC9Bd,UAAU,CAACE,OAAO,CAACa,MAAM,CAACJ,OAAO,EAAEC,OAAO,CAAC;IAC7C,CAAC;IAED,MAAMI,UAAU,GAAGA,CAAA,KAAM;MACvBjB,YAAY,CAAC,KAAK,CAAC;MACnBC,UAAU,CAACE,OAAO,CAACe,SAAS,CAAC,CAAC;IAChC,CAAC;IAED,MAAMC,IAAI,GAAIR,CAAC,IAAK;MAClB,IAAI,CAACZ,SAAS,EAAE;MAChB,MAAM;QAAEa,OAAO;QAAEC;MAAQ,CAAC,GAAGF,CAAC,CAACG,WAAW;MAC1Cb,UAAU,CAACE,OAAO,CAACiB,MAAM,CAACR,OAAO,EAAEC,OAAO,CAAC;MAC3CZ,UAAU,CAACE,OAAO,CAACkB,MAAM,CAAC,CAAC;IAC7B,CAAC;IAEDnB,MAAM,CAACoB,gBAAgB,CAAC,WAAW,EAAEZ,YAAY,CAAC;IAClDR,MAAM,CAACoB,gBAAgB,CAAC,SAAS,EAAEL,UAAU,CAAC;IAC9Cf,MAAM,CAACoB,gBAAgB,CAAC,WAAW,EAAEH,IAAI,CAAC;IAE1C,OAAO,MAAM;MACXjB,MAAM,CAACqB,mBAAmB,CAAC,WAAW,EAAEb,YAAY,CAAC;MACrDR,MAAM,CAACqB,mBAAmB,CAAC,SAAS,EAAEN,UAAU,CAAC;MACjDf,MAAM,CAACqB,mBAAmB,CAAC,WAAW,EAAEJ,IAAI,CAAC;IAC/C,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACExB,OAAA;IACE6B,GAAG,EAAE1B,SAAU;IACf2B,KAAK,EAAE;MAAEC,MAAM,EAAE;IAAkB;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEN,CAAC;AAACjC,EAAA,CApDID,aAAa;AAAAmC,EAAA,GAAbnC,aAAa;AAsDnB,eAAeA,aAAa;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}