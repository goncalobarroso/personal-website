{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gonca\\\\Documents\\\\Curso\\\\MDM\\\\DW\\\\solo_project\\\\webdev-solo-project-app\\\\src\\\\Component\\\\PatternDraw.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PatternDraw = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const drawingData = useRef([]);\n  const contextRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    canvas.width = 500;\n    canvas.height = 500;\n    const context = canvas.getContext('2d');\n    context.strokeStyle = 'black';\n    context.lineWidth = 2;\n    contextRef.current = context;\n    const startDrawing = e => {\n      setIsDrawing(true);\n      const x = e.clientX - canvas.getBoundingClientRect().left;\n      const y = e.clientY - canvas.getBoundingClientRect().top;\n      drawingData.current.push({\n        x,\n        y\n      });\n      contextRef.current.beginPath();\n      contextRef.current.moveTo(x, y);\n    };\n    const endDrawing = () => {\n      setIsDrawing(false);\n      contextRef.current.closePath();\n    };\n    const draw = e => {\n      if (!isDrawing) return;\n      const x = e.clientX - canvas.getBoundingClientRect().left;\n      const y = e.clientY - canvas.getBoundingClientRect().top;\n      drawingData.current.push({\n        x,\n        y\n      });\n      contextRef.current.lineTo(x, y);\n      contextRef.current.stroke();\n    };\n    canvas.addEventListener('mousedown', startDrawing);\n    canvas.addEventListener('mouseup', endDrawing);\n    canvas.addEventListener('mousemove', draw);\n    return () => {\n      canvas.removeEventListener('mousedown', startDrawing);\n      canvas.removeEventListener('mouseup', endDrawing);\n      canvas.removeEventListener('mousemove', draw);\n    };\n  }, [isDrawing]);\n  useEffect(() => {\n    // Redraw the existing drawing when the component re-renders\n    const context = canvasRef.current.getContext('2d');\n    context.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    for (let i = 0; i < drawingData.current.length; i++) {\n      if (i === 0) {\n        context.beginPath();\n        context.moveTo(drawingData.current[i].x, drawingData.current[i].y);\n      } else {\n        context.lineTo(drawingData.current[i].x, drawingData.current[i].y);\n        context.stroke();\n      }\n    }\n    context.closePath();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    style: {\n      border: '1px solid black'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(PatternDraw, \"G3tj5X+jXDhfo5fj+2f9pJ19Dlo=\");\n_c = PatternDraw;\nexport default PatternDraw;\nvar _c;\n$RefreshReg$(_c, \"PatternDraw\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","PatternDraw","_s","canvasRef","isDrawing","setIsDrawing","drawingData","contextRef","canvas","current","width","height","context","getContext","strokeStyle","lineWidth","startDrawing","e","x","clientX","getBoundingClientRect","left","y","clientY","top","push","beginPath","moveTo","endDrawing","closePath","draw","lineTo","stroke","addEventListener","removeEventListener","clearRect","i","length","ref","style","border","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/gonca/Documents/Curso/MDM/DW/solo_project/webdev-solo-project-app/src/Component/PatternDraw.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\n\r\nconst PatternDraw = () => {\r\n  const canvasRef = useRef(null);\r\n  const [isDrawing, setIsDrawing] = useState(false);\r\n  const drawingData = useRef([]);\r\n  const contextRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    canvas.width = 500;\r\n    canvas.height = 500;\r\n\r\n    const context = canvas.getContext('2d');\r\n    context.strokeStyle = 'black';\r\n    context.lineWidth = 2;\r\n    contextRef.current = context;\r\n\r\n    const startDrawing = (e) => {\r\n      setIsDrawing(true);\r\n      const x = e.clientX - canvas.getBoundingClientRect().left;\r\n      const y = e.clientY - canvas.getBoundingClientRect().top;\r\n      drawingData.current.push({ x, y });\r\n      contextRef.current.beginPath();\r\n      contextRef.current.moveTo(x, y);\r\n    };\r\n\r\n    const endDrawing = () => {\r\n      setIsDrawing(false);\r\n      contextRef.current.closePath();\r\n    };\r\n\r\n    const draw = (e) => {\r\n      if (!isDrawing) return;\r\n      const x = e.clientX - canvas.getBoundingClientRect().left;\r\n      const y = e.clientY - canvas.getBoundingClientRect().top;\r\n      drawingData.current.push({ x, y });\r\n      contextRef.current.lineTo(x, y);\r\n      contextRef.current.stroke();\r\n    };\r\n\r\n    canvas.addEventListener('mousedown', startDrawing);\r\n    canvas.addEventListener('mouseup', endDrawing);\r\n    canvas.addEventListener('mousemove', draw);\r\n\r\n    return () => {\r\n      canvas.removeEventListener('mousedown', startDrawing);\r\n      canvas.removeEventListener('mouseup', endDrawing);\r\n      canvas.removeEventListener('mousemove', draw);\r\n    };\r\n  }, [isDrawing]);\r\n\r\n  useEffect(() => {\r\n    // Redraw the existing drawing when the component re-renders\r\n    const context = canvasRef.current.getContext('2d');\r\n    context.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\r\n\r\n    for (let i = 0; i < drawingData.current.length; i++) {\r\n      if (i === 0) {\r\n        context.beginPath();\r\n        context.moveTo(drawingData.current[i].x, drawingData.current[i].y);\r\n      } else {\r\n        context.lineTo(drawingData.current[i].x, drawingData.current[i].y);\r\n        context.stroke();\r\n      }\r\n    }\r\n\r\n    context.closePath();\r\n  }, []);\r\n\r\n  return (\r\n    <canvas\r\n      ref={canvasRef}\r\n      style={{ border: '1px solid black' }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PatternDraw;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}