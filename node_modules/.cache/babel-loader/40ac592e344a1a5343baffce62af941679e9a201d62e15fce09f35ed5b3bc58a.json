{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gonca\\\\Documents\\\\Curso\\\\MDM\\\\DW\\\\solo_project\\\\webdev-solo-project-app\\\\src\\\\Component\\\\PatternDraw.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PatternDraw = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const contextRef = useRef(null);\n  const pathsRef = useRef([]);\n  const currentPathRef = useRef([]);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    contextRef.current = context;\n    canvas.width = 500;\n    canvas.height = 500;\n    context.strokeStyle = 'black';\n    context.lineWidth = 2;\n    const startDrawing = e => {\n      setIsDrawing(true);\n      const x = e.nativeEvent.offsetX;\n      const y = e.nativeEvent.offsetY;\n      currentPathRef.current = [{\n        x,\n        y\n      }];\n    };\n    const endDrawing = () => {\n      if (isDrawing) {\n        pathsRef.current.push(currentPathRef.current);\n        currentPathRef.current = [];\n        setIsDrawing(false);\n      }\n    };\n    const draw = e => {\n      if (!isDrawing) return;\n      const x = e.nativeEvent.offsetX;\n      const y = e.nativeEvent.offsetY;\n      currentPathRef.current.push({\n        x,\n        y\n      });\n      contextRef.current.clearRect(0, 0, canvas.width, canvas.height);\n      pathsRef.current.forEach(path => {\n        contextRef.current.beginPath();\n        path.forEach((point, index) => {\n          const prevPoint = path[index - 1];\n          if (prevPoint) {\n            contextRef.current.moveTo(prevPoint.x, prevPoint.y);\n            contextRef.current.lineTo(point.x, point.y);\n          }\n        });\n        contextRef.current.stroke();\n        contextRef.current.closePath();\n      });\n      contextRef.current.beginPath();\n      currentPathRef.current.forEach((point, index) => {\n        const prevPoint = currentPathRef.current[index - 1];\n        if (prevPoint) {\n          contextRef.current.moveTo(prevPoint.x, prevPoint.y);\n          contextRef.current.lineTo(point.x, point.y);\n        }\n      });\n      contextRef.current.stroke();\n      contextRef.current.closePath();\n    };\n    canvas.addEventListener('mousedown', startDrawing);\n    canvas.addEventListener('mouseup', endDrawing);\n    canvas.addEventListener('mousemove', draw);\n    return () => {\n      canvas.removeEventListener('mousedown', startDrawing);\n      canvas.removeEventListener('mouseup', endDrawing);\n      canvas.removeEventListener('mousemove', draw);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    style: {\n      border: '1px solid black'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(PatternDraw, \"z4rqAXCWxEzkwH5fEuwhZnXN1yQ=\");\n_c = PatternDraw;\nexport default DrawingCanvas;\nvar _c;\n$RefreshReg$(_c, \"PatternDraw\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","PatternDraw","_s","canvasRef","isDrawing","setIsDrawing","contextRef","pathsRef","currentPathRef","canvas","current","context","getContext","width","height","strokeStyle","lineWidth","startDrawing","e","x","nativeEvent","offsetX","y","offsetY","endDrawing","push","draw","clearRect","forEach","path","beginPath","point","index","prevPoint","moveTo","lineTo","stroke","closePath","addEventListener","removeEventListener","ref","style","border","fileName","_jsxFileName","lineNumber","columnNumber","_c","DrawingCanvas","$RefreshReg$"],"sources":["C:/Users/gonca/Documents/Curso/MDM/DW/solo_project/webdev-solo-project-app/src/Component/PatternDraw.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\n\r\nconst PatternDraw = () => {\r\n  const canvasRef = useRef(null);\r\n  const [isDrawing, setIsDrawing] = useState(false);\r\n  const contextRef = useRef(null);\r\n  const pathsRef = useRef([]);\r\n  const currentPathRef = useRef([]);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const context = canvas.getContext('2d');\r\n    contextRef.current = context;\r\n\r\n    canvas.width = 500;\r\n    canvas.height = 500;\r\n\r\n    context.strokeStyle = 'black';\r\n    context.lineWidth = 2;\r\n\r\n    const startDrawing = (e) => {\r\n      setIsDrawing(true);\r\n      const x = e.nativeEvent.offsetX;\r\n      const y = e.nativeEvent.offsetY;\r\n      currentPathRef.current = [{ x, y }];\r\n    };\r\n\r\n    const endDrawing = () => {\r\n      if (isDrawing) {\r\n        pathsRef.current.push(currentPathRef.current);\r\n        currentPathRef.current = [];\r\n        setIsDrawing(false);\r\n      }\r\n    };\r\n\r\n    const draw = (e) => {\r\n      if (!isDrawing) return;\r\n      const x = e.nativeEvent.offsetX;\r\n      const y = e.nativeEvent.offsetY;\r\n      currentPathRef.current.push({ x, y });\r\n\r\n      contextRef.current.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n      pathsRef.current.forEach((path) => {\r\n        contextRef.current.beginPath();\r\n        path.forEach((point, index) => {\r\n          const prevPoint = path[index - 1];\r\n          if (prevPoint) {\r\n            contextRef.current.moveTo(prevPoint.x, prevPoint.y);\r\n            contextRef.current.lineTo(point.x, point.y);\r\n          }\r\n        });\r\n        contextRef.current.stroke();\r\n        contextRef.current.closePath();\r\n      });\r\n\r\n      contextRef.current.beginPath();\r\n      currentPathRef.current.forEach((point, index) => {\r\n        const prevPoint = currentPathRef.current[index - 1];\r\n        if (prevPoint) {\r\n          contextRef.current.moveTo(prevPoint.x, prevPoint.y);\r\n          contextRef.current.lineTo(point.x, point.y);\r\n        }\r\n      });\r\n      contextRef.current.stroke();\r\n      contextRef.current.closePath();\r\n    };\r\n\r\n    canvas.addEventListener('mousedown', startDrawing);\r\n    canvas.addEventListener('mouseup', endDrawing);\r\n    canvas.addEventListener('mousemove', draw);\r\n\r\n    return () => {\r\n      canvas.removeEventListener('mousedown', startDrawing);\r\n      canvas.removeEventListener('mouseup', endDrawing);\r\n      canvas.removeEventListener('mousemove', draw);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <canvas\r\n      ref={canvasRef}\r\n      style={{ border: '1px solid black' }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DrawingCanvas;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}