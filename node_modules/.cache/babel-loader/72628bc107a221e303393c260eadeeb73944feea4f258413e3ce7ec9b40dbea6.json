{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gonca\\\\Documents\\\\Curso\\\\MDM\\\\DW\\\\solo_project\\\\webdev-solo-project-app\\\\src\\\\Component\\\\PatternDraw.js\",\n  _s = $RefreshSig$();\nimport { React } from 'react';\nimport { Stage, Layer, Line } from 'react-konva';\nimport { useEffect, useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DrawingArea = ({\n  onClearLines,\n  clearLines\n}) => {\n  _s();\n  const [lines, setLines] = useState([]);\n  const isDrawing = useRef(false);\n  useEffect(() => {\n    //loadImage();\n  }, [clearLines]);\n  const handleMouseDown = e => {\n    isDrawing.current = true;\n    const pos = e.target.getStage().getPointerPosition();\n    setLines([...lines, {\n      points: [pos.x, pos.y]\n    }]);\n  };\n  const handleMouseMove = e => {\n    // no drawing - skipping\n    if (!isDrawing.current) {\n      return;\n    }\n    const stage = e.target.getStage();\n    const point = stage.getPointerPosition();\n\n    // To draw line\n    let lastLine = lines[lines.length - 1];\n    if (lastLine) {\n      // add point\n      lastLine.points = lastLine.points.concat([point.x, point.y]);\n\n      // replace last\n      lines.splice(lines.length - 1, 1, lastLine);\n      setLines(lines.concat());\n    }\n  };\n  const handleMouseUp = () => {\n    isDrawing.current = false;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \" text-center text-dark\",\n    children: /*#__PURE__*/_jsxDEV(Stage, {\n      width: 600,\n      height: 600,\n      onMouseDown: handleMouseDown,\n      onMousemove: handleMouseMove,\n      onMouseup: handleMouseUp,\n      className: \"canvas-stage\",\n      children: /*#__PURE__*/_jsxDEV(Layer, {\n        children: lines.map((line, i) => /*#__PURE__*/_jsxDEV(Line, {\n          points: line.points,\n          stroke: \"#df4b26\",\n          strokeWidth: 2,\n          tension: 0.5,\n          lineCap: \"round\",\n          globalCompositeOperation: line.tool === 'eraser' ? 'destination-out' : 'source-over'\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(DrawingArea, \"ouPDGWXJZwviWowsYCMOFLcirac=\");\n_c = DrawingArea;\nexport default DrawingArea;\nvar _c;\n$RefreshReg$(_c, \"DrawingArea\");","map":{"version":3,"names":["React","Stage","Layer","Line","useEffect","useState","useRef","jsxDEV","_jsxDEV","DrawingArea","onClearLines","clearLines","_s","lines","setLines","isDrawing","handleMouseDown","e","current","pos","target","getStage","getPointerPosition","points","x","y","handleMouseMove","stage","point","lastLine","length","concat","splice","handleMouseUp","className","children","width","height","onMouseDown","onMousemove","onMouseup","map","line","i","stroke","strokeWidth","tension","lineCap","globalCompositeOperation","tool","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/gonca/Documents/Curso/MDM/DW/solo_project/webdev-solo-project-app/src/Component/PatternDraw.js"],"sourcesContent":["import { React } from 'react';\r\nimport { Stage, Layer, Line } from 'react-konva';\r\nimport { useEffect, useState, useRef } from 'react';\r\n\r\nconst DrawingArea = ({onClearLines, clearLines}) => {\r\n\r\n    const [lines, setLines] = useState([]);\r\n    const isDrawing = useRef(false);\r\n\r\n    useEffect(() => {\r\n        //loadImage();\r\n    }, [clearLines])\r\n    \r\n    const handleMouseDown = (e) => {\r\n        isDrawing.current = true;\r\n        const pos = e.target.getStage().getPointerPosition();\r\n        setLines([...lines, { points: [pos.x, pos.y] }]);\r\n    };\r\n    \r\n    const handleMouseMove = (e) => {\r\n        // no drawing - skipping\r\n        if (!isDrawing.current) {\r\n          return;\r\n        }\r\n        const stage = e.target.getStage();\r\n        const point = stage.getPointerPosition();\r\n    \r\n        // To draw line\r\n        let lastLine = lines[lines.length - 1];\r\n        \r\n        if(lastLine) {\r\n            // add point\r\n            lastLine.points = lastLine.points.concat([point.x, point.y]);\r\n                \r\n            // replace last\r\n            lines.splice(lines.length - 1, 1, lastLine);\r\n            setLines(lines.concat());\r\n        }\r\n        \r\n    };\r\n    \r\n    const handleMouseUp = () => {\r\n        isDrawing.current = false;\r\n    };\r\n\r\n    return (\r\n        <div className=\" text-center text-dark\">\r\n            <Stage\r\n                width={600}\r\n                height={600}\r\n                onMouseDown={handleMouseDown}\r\n                onMousemove={handleMouseMove}\r\n                onMouseup={handleMouseUp}\r\n                className=\"canvas-stage\"\r\n            >\r\n                <Layer>\r\n                    {lines.map((line, i) => (\r\n                        <Line\r\n                        key={i}\r\n                        points={line.points}\r\n                        stroke=\"#df4b26\"\r\n                        strokeWidth={2}\r\n                        tension={0.5}\r\n                        lineCap=\"round\"\r\n                        globalCompositeOperation={\r\n                            line.tool === 'eraser' ? 'destination-out' : 'source-over'\r\n                        }\r\n                        />\r\n                    ))}\r\n                </Layer>\r\n            </Stage>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DrawingArea"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}