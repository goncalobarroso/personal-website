{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gonca\\\\Documents\\\\Curso\\\\MDM\\\\DW\\\\solo_project\\\\webdev-solo-project-app\\\\src\\\\Component\\\\CustomPatternGenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomPatternGenerator = ({\n  array\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const arrayRef = useRef(array);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    const numRows = 15; // Number of rows\n    const numCols = 30; // Number of columns\n    const squareSize = 75; // Size of each square\n\n    canvas.width = numCols * squareSize;\n    canvas.height = numRows * squareSize;\n\n    // Function to draw a square image with a specific rotation\n    function drawSquareImage(x, y, size, rotation, imageUrl) {\n      const img = new Image();\n      img.src = imageUrl;\n      img.onload = () => {\n        context.save();\n        context.translate(x, y);\n        context.rotate(rotation * Math.PI / 180); // Convert degrees to radians\n        context.drawImage(img, -size / 2, -size / 2, size, size);\n        context.restore();\n      };\n    }\n\n    // Check if the 'array' prop has changed\n    if (arrayRef.current !== array) {\n      arrayRef.current = array;\n\n      // Generate the grid of squares with random rotations and images\n      for (let row = 0; row < numRows; row++) {\n        for (let col = 0; col < numCols; col++) {\n          const x = col * squareSize + squareSize / 2;\n          const y = row * squareSize + squareSize / 2;\n          const rotation = Math.floor(Math.random() * 4) * 90; // Random rotation in 90-degree increments\n          const randomValue = Math.random(); // Random value between 0 and 1\n          const imageUrl = array[Math.floor(randomValue * array.length)];\n          drawSquareImage(x, y, squareSize, rotation, imageUrl);\n        }\n      }\n    }\n  }, [arrayRef]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    className: \"background\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 10\n  }, this);\n};\n_s(CustomPatternGenerator, \"LD8W+fgAV56pPY5OVnPjef0PBpQ=\");\n_c = CustomPatternGenerator;\nexport default CustomPatternGenerator;\nvar _c;\n$RefreshReg$(_c, \"CustomPatternGenerator\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","CustomPatternGenerator","array","_s","canvasRef","arrayRef","canvas","current","context","getContext","numRows","numCols","squareSize","width","height","drawSquareImage","x","y","size","rotation","imageUrl","img","Image","src","onload","save","translate","rotate","Math","PI","drawImage","restore","row","col","floor","random","randomValue","length","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/gonca/Documents/Curso/MDM/DW/solo_project/webdev-solo-project-app/src/Component/CustomPatternGenerator.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport '../App.css';\r\n\r\nconst CustomPatternGenerator = ({ array }) => {\r\n  const canvasRef = useRef(null);\r\n  const arrayRef = useRef(array);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const context = canvas.getContext('2d');\r\n    const numRows = 15; // Number of rows\r\n    const numCols = 30; // Number of columns\r\n    const squareSize = 75; // Size of each square\r\n\r\n    canvas.width = numCols * squareSize;\r\n    canvas.height = numRows * squareSize;\r\n\r\n    // Function to draw a square image with a specific rotation\r\n    function drawSquareImage(x, y, size, rotation, imageUrl) {\r\n      const img = new Image();\r\n      img.src = imageUrl;\r\n      img.onload = () => {\r\n        context.save();\r\n        context.translate(x, y);\r\n        context.rotate((rotation * Math.PI) / 180); // Convert degrees to radians\r\n        context.drawImage(img, -size / 2, -size / 2, size, size);\r\n        context.restore();\r\n      };\r\n    }\r\n\r\n    // Check if the 'array' prop has changed\r\n    if (arrayRef.current !== array) {\r\n      arrayRef.current = array;\r\n      \r\n      // Generate the grid of squares with random rotations and images\r\n      for (let row = 0; row < numRows; row++) {\r\n        for (let col = 0; col < numCols; col++) {\r\n          const x = col * squareSize + squareSize / 2;\r\n          const y = row * squareSize + squareSize / 2;\r\n          const rotation = Math.floor(Math.random() * 4) * 90; // Random rotation in 90-degree increments\r\n          const randomValue = Math.random(); // Random value between 0 and 1\r\n          const imageUrl = array[Math.floor(randomValue * array.length)];\r\n\r\n          drawSquareImage(x, y, squareSize, rotation, imageUrl);\r\n        }\r\n      }\r\n    }\r\n  }, [arrayRef]);\r\n\r\n  return <canvas ref={canvasRef} className='background'></canvas>;\r\n};\r\n\r\nexport default CustomPatternGenerator;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}