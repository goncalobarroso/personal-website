{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gonca\\\\Documents\\\\Curso\\\\MDM\\\\DW\\\\solo_project\\\\webdev-solo-project-app\\\\src\\\\Component\\\\PatternDraw.js\",\n  _s = $RefreshSig$();\nimport { useOnDraw } from './Hooks';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PatternDraw = ({\n  width,\n  height\n}) => {\n  _s();\n  const {\n    setCanvasRef,\n    onCanvasMouseDown\n  } = useOnDraw(onDraw);\n  const [currentColor, setCurrentColor] = useState('#000000');\n  const [drawings, setDrawings] = useState([]); // State to store drawings\n\n  function onDraw(ctx, point, prevPoint) {\n    drawLine(prevPoint, point, ctx, currentColor, 30);\n  }\n  function drawLine(start, end, ctx, color, width) {\n    var _start;\n    start = (_start = start) !== null && _start !== void 0 ? _start : end;\n    ctx.beginPath();\n    ctx.lineWidth = width;\n    ctx.strokeStyle = color;\n    ctx.moveTo(start.x, start.y);\n    ctx.lineTo(end.x, end.y);\n    ctx.stroke();\n    ctx.fillStyle = color;\n    ctx.beginPath();\n    ctx.arc(start.x, start.y, 2, 0, 2 * Math.PI);\n    ctx.fill();\n  }\n  function clearCanvas() {\n    const canvas = document.querySelector('canvas'); // Get the canvas element\n    const ctx = canvas.getContext('2d'); // Get the 2D rendering context\n\n    // Clear the entire canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n  }\n  function changeColor(newColor) {\n    setCurrentColor(newColor);\n  }\n  function saveDrawing() {\n    const canvas = document.querySelector('canvas'); // Get the canvas element\n\n    if (canvas) {\n      const svgData = canvas.toDataURL(\"image/svg+xml\");\n      setDrawings([...drawings, svgData]);\n      clearCanvas();\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      width: width,\n      height: height,\n      onMouseDown: onCanvasMouseDown,\n      ref: setCanvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"canvas-button\",\n      onClick: clearCanvas,\n      children: \"limpar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"canvas-button\",\n      onClick: saveDrawing,\n      children: \"adicionar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"canvas-button\",\n      onClick: () => changeColor('#FF0000'),\n      children: \"vermelho\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"canvas-button\",\n      onClick: () => changeColor('#00FF00'),\n      children: \"verde\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"canvas-button\",\n      onClick: () => changeColor('#0000FF'),\n      children: \"azul\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"canvas-button\",\n      onClick: () => changeColor('#000000'),\n      children: \"preto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: drawings.map((drawing, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"saved-patterns\",\n        src: drawing,\n        alt: `Saved Drawing ${index}`\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n_s(PatternDraw, \"5S5vvPDV1SUBs2gUoOue99j4AHk=\", false, function () {\n  return [useOnDraw];\n});\n_c = PatternDraw;\nexport default PatternDraw;\nvar _c;\n$RefreshReg$(_c, \"PatternDraw\");","map":{"version":3,"names":["useOnDraw","useState","jsxDEV","_jsxDEV","PatternDraw","width","height","_s","setCanvasRef","onCanvasMouseDown","onDraw","currentColor","setCurrentColor","drawings","setDrawings","ctx","point","prevPoint","drawLine","start","end","color","_start","beginPath","lineWidth","strokeStyle","moveTo","x","y","lineTo","stroke","fillStyle","arc","Math","PI","fill","clearCanvas","canvas","document","querySelector","getContext","clearRect","changeColor","newColor","saveDrawing","svgData","toDataURL","children","onMouseDown","ref","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","map","drawing","index","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/gonca/Documents/Curso/MDM/DW/solo_project/webdev-solo-project-app/src/Component/PatternDraw.js"],"sourcesContent":["import {useOnDraw} from './Hooks';\r\nimport { useState } from 'react';\r\n\r\nconst PatternDraw = ({ width,height }) => {\r\n\r\n    const {setCanvasRef,onCanvasMouseDown} = useOnDraw(onDraw);\r\n    const [currentColor, setCurrentColor] = useState('#000000');\r\n    const [drawings, setDrawings] = useState([]); // State to store drawings\r\n\r\n    function onDraw(ctx, point, prevPoint) {\r\n        drawLine(prevPoint, point, ctx, currentColor, 30);\r\n    }\r\n\r\n    function drawLine(\r\n        start,\r\n        end,\r\n        ctx,\r\n        color,\r\n        width\r\n    ) {\r\n        start = start ?? end;\r\n        ctx.beginPath();\r\n        ctx.lineWidth = width;\r\n        ctx.strokeStyle = color;\r\n        ctx.moveTo(start.x, start.y);\r\n        ctx.lineTo(end.x, end.y);\r\n        ctx.stroke();\r\n\r\n        ctx.fillStyle = color;\r\n        ctx.beginPath();\r\n        ctx.arc(start.x, start.y, 2, 0, 2 * Math.PI);\r\n        ctx.fill();\r\n\r\n    }\r\n\r\n    function clearCanvas() {\r\n        const canvas = document.querySelector('canvas'); // Get the canvas element\r\n        const ctx = canvas.getContext('2d'); // Get the 2D rendering context\r\n    \r\n        // Clear the entire canvas\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    }\r\n\r\n    function changeColor(newColor) {\r\n        setCurrentColor(newColor);\r\n    }\r\n\r\n    function saveDrawing() {\r\n        const canvas = document.querySelector('canvas'); // Get the canvas element\r\n\r\n        if (canvas) {\r\n            const svgData = canvas.toDataURL(\"image/svg+xml\");\r\n            setDrawings([...drawings, svgData]);\r\n            clearCanvas();\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <canvas\r\n                width={width}\r\n                height={height}\r\n                onMouseDown={onCanvasMouseDown}\r\n                ref={setCanvasRef}\r\n            />\r\n            <button className=\"canvas-button\" onClick={clearCanvas}>limpar</button>\r\n            <button className=\"canvas-button\" onClick={saveDrawing}>adicionar</button>\r\n            <button className=\"canvas-button\" onClick={() => changeColor('#FF0000')}>vermelho</button>\r\n            <button className=\"canvas-button\" onClick={() => changeColor('#00FF00')}>verde</button>\r\n            <button className=\"canvas-button\" onClick={() => changeColor('#0000FF')}>azul</button>\r\n            <button className=\"canvas-button\" onClick={() => changeColor('#000000')}>preto</button>\r\n            <div>\r\n                {drawings.map((drawing, index) => (\r\n                    <img\r\n                        className='saved-patterns'\r\n                        key={index}\r\n                        src={drawing}\r\n                        alt={`Saved Drawing ${index}`}      \r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default PatternDraw;"],"mappings":";;AAAA,SAAQA,SAAS,QAAO,SAAS;AACjC,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,WAAW,GAAGA,CAAC;EAAEC,KAAK;EAACC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAEtC,MAAM;IAACC,YAAY;IAACC;EAAiB,CAAC,GAAGT,SAAS,CAACU,MAAM,CAAC;EAC1D,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,SAAS,CAAC;EAC3D,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE9C,SAASS,MAAMA,CAACK,GAAG,EAAEC,KAAK,EAAEC,SAAS,EAAE;IACnCC,QAAQ,CAACD,SAAS,EAAED,KAAK,EAAED,GAAG,EAAEJ,YAAY,EAAE,EAAE,CAAC;EACrD;EAEA,SAASO,QAAQA,CACbC,KAAK,EACLC,GAAG,EACHL,GAAG,EACHM,KAAK,EACLhB,KAAK,EACP;IAAA,IAAAiB,MAAA;IACEH,KAAK,IAAAG,MAAA,GAAGH,KAAK,cAAAG,MAAA,cAAAA,MAAA,GAAIF,GAAG;IACpBL,GAAG,CAACQ,SAAS,CAAC,CAAC;IACfR,GAAG,CAACS,SAAS,GAAGnB,KAAK;IACrBU,GAAG,CAACU,WAAW,GAAGJ,KAAK;IACvBN,GAAG,CAACW,MAAM,CAACP,KAAK,CAACQ,CAAC,EAAER,KAAK,CAACS,CAAC,CAAC;IAC5Bb,GAAG,CAACc,MAAM,CAACT,GAAG,CAACO,CAAC,EAAEP,GAAG,CAACQ,CAAC,CAAC;IACxBb,GAAG,CAACe,MAAM,CAAC,CAAC;IAEZf,GAAG,CAACgB,SAAS,GAAGV,KAAK;IACrBN,GAAG,CAACQ,SAAS,CAAC,CAAC;IACfR,GAAG,CAACiB,GAAG,CAACb,KAAK,CAACQ,CAAC,EAAER,KAAK,CAACS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAGK,IAAI,CAACC,EAAE,CAAC;IAC5CnB,GAAG,CAACoB,IAAI,CAAC,CAAC;EAEd;EAEA,SAASC,WAAWA,CAAA,EAAG;IACnB,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC;IACjD,MAAMxB,GAAG,GAAGsB,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;;IAErC;IACAzB,GAAG,CAAC0B,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEJ,MAAM,CAAChC,KAAK,EAAEgC,MAAM,CAAC/B,MAAM,CAAC;EACpD;EAEA,SAASoC,WAAWA,CAACC,QAAQ,EAAE;IAC3B/B,eAAe,CAAC+B,QAAQ,CAAC;EAC7B;EAEA,SAASC,WAAWA,CAAA,EAAG;IACnB,MAAMP,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC;;IAEjD,IAAIF,MAAM,EAAE;MACR,MAAMQ,OAAO,GAAGR,MAAM,CAACS,SAAS,CAAC,eAAe,CAAC;MACjDhC,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEgC,OAAO,CAAC,CAAC;MACnCT,WAAW,CAAC,CAAC;IACjB;EACJ;EAEA,oBACIjC,OAAA;IAAA4C,QAAA,gBACI5C,OAAA;MACIE,KAAK,EAAEA,KAAM;MACbC,MAAM,EAAEA,MAAO;MACf0C,WAAW,EAAEvC,iBAAkB;MAC/BwC,GAAG,EAAEzC;IAAa;MAAA0C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC,eACFlD,OAAA;MAAQmD,SAAS,EAAC,eAAe;MAACC,OAAO,EAAEnB,WAAY;MAAAW,QAAA,EAAC;IAAM;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACvElD,OAAA;MAAQmD,SAAS,EAAC,eAAe;MAACC,OAAO,EAAEX,WAAY;MAAAG,QAAA,EAAC;IAAS;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC1ElD,OAAA;MAAQmD,SAAS,EAAC,eAAe;MAACC,OAAO,EAAEA,CAAA,KAAMb,WAAW,CAAC,SAAS,CAAE;MAAAK,QAAA,EAAC;IAAQ;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC1FlD,OAAA;MAAQmD,SAAS,EAAC,eAAe;MAACC,OAAO,EAAEA,CAAA,KAAMb,WAAW,CAAC,SAAS,CAAE;MAAAK,QAAA,EAAC;IAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACvFlD,OAAA;MAAQmD,SAAS,EAAC,eAAe;MAACC,OAAO,EAAEA,CAAA,KAAMb,WAAW,CAAC,SAAS,CAAE;MAAAK,QAAA,EAAC;IAAI;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACtFlD,OAAA;MAAQmD,SAAS,EAAC,eAAe;MAACC,OAAO,EAAEA,CAAA,KAAMb,WAAW,CAAC,SAAS,CAAE;MAAAK,QAAA,EAAC;IAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACvFlD,OAAA;MAAA4C,QAAA,EACKlC,QAAQ,CAAC2C,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBACzBvD,OAAA;QACImD,SAAS,EAAC,gBAAgB;QAE1BK,GAAG,EAAEF,OAAQ;QACbG,GAAG,EAAG,iBAAgBF,KAAM;MAAE,GAFzBA,KAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGb,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAGd,CAAC;AAAA9C,EAAA,CAjFKH,WAAW;EAAA,QAE4BJ,SAAS;AAAA;AAAA6D,EAAA,GAFhDzD,WAAW;AAmFjB,eAAeA,WAAW;AAAC,IAAAyD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}