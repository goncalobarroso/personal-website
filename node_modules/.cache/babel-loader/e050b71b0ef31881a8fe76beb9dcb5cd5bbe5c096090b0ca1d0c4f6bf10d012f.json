{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gonca\\\\Documents\\\\Curso\\\\MDM\\\\DW\\\\solo_project\\\\webdev-solo-project-app\\\\src\\\\Component\\\\PatternDraw.js\",\n  _s = $RefreshSig$();\nimport { useOnDraw } from './Hooks';\nimport { useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PatternDraw = ({\n  width,\n  height\n}) => {\n  _s();\n  const {\n    setCanvasRef,\n    onCanvasMouseDown\n  } = useOnDraw(onDraw);\n  const [currentColor, setCurrentColor] = useState('#000000');\n  const [drawings, setDrawings] = useState([]); // State to store drawings\n  const canvasRef = useRef(null);\n  function onDraw(ctx, point, prevPoint) {\n    drawLine(prevPoint, point, ctx, currentColor, 30);\n  }\n  function drawLine(start, end, ctx, color, width) {\n    var _start;\n    start = (_start = start) !== null && _start !== void 0 ? _start : end;\n    ctx.beginPath();\n    ctx.lineWidth = width;\n    ctx.strokeStyle = color;\n    ctx.moveTo(start.x, start.y);\n    ctx.lineTo(end.x, end.y);\n    ctx.stroke();\n    ctx.fillStyle = color;\n    ctx.beginPath();\n    ctx.arc(start.x, start.y, 2, 0, 2 * Math.PI);\n    ctx.fill();\n  }\n  function clearCanvas() {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n  }\n  function changeColor(newColor) {\n    setCurrentColor(newColor);\n  }\n  function saveDrawing() {\n    const canvas = canvasRef.current;\n    const svgData = canvas.toDataURL(\"image/svg+xml\");\n    setDrawings([...drawings, svgData]);\n    clearCanvas(); // Clear the canvas after saving\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: width,\n      height: height,\n      onMouseDown: onCanvasMouseDown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"canvas-button\",\n      onClick: clearCanvas,\n      children: \"Clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"canvas-button\",\n      onClick: saveDrawing,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"canvas-button\",\n      onClick: () => changeColor('#FF0000'),\n      children: \"Red\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"canvas-button\",\n      onClick: () => changeColor('#00FF00'),\n      children: \"Green\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"canvas-button\",\n      onClick: () => changeColor('#0000FF'),\n      children: \"Blue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"canvas-button\",\n      onClick: () => changeColor('#FFFF00'),\n      children: \"Yellow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), drawings.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Saved Drawings:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), drawings.map((svgData, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: svgData,\n          alt: `Drawing ${index}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(PatternDraw, \"h21sUMKohf6inwVIR6bmtjZoJwY=\", false, function () {\n  return [useOnDraw];\n});\n_c = PatternDraw;\nexport default PatternDraw;\nvar _c;\n$RefreshReg$(_c, \"PatternDraw\");","map":{"version":3,"names":["useOnDraw","useState","useRef","jsxDEV","_jsxDEV","PatternDraw","width","height","_s","setCanvasRef","onCanvasMouseDown","onDraw","currentColor","setCurrentColor","drawings","setDrawings","canvasRef","ctx","point","prevPoint","drawLine","start","end","color","_start","beginPath","lineWidth","strokeStyle","moveTo","x","y","lineTo","stroke","fillStyle","arc","Math","PI","fill","clearCanvas","canvas","current","getContext","clearRect","changeColor","newColor","saveDrawing","svgData","toDataURL","children","ref","onMouseDown","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","length","map","index","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/gonca/Documents/Curso/MDM/DW/solo_project/webdev-solo-project-app/src/Component/PatternDraw.js"],"sourcesContent":["import { useOnDraw } from './Hooks';\r\nimport { useState, useRef } from 'react';\r\n\r\nconst PatternDraw = ({ width, height }) => {\r\n  const { setCanvasRef, onCanvasMouseDown } = useOnDraw(onDraw);\r\n  const [currentColor, setCurrentColor] = useState('#000000');\r\n  const [drawings, setDrawings] = useState([]); // State to store drawings\r\n  const canvasRef = useRef(null);\r\n\r\n  function onDraw(ctx, point, prevPoint) {\r\n    drawLine(prevPoint, point, ctx, currentColor, 30);\r\n  }\r\n\r\n  function drawLine(start, end, ctx, color, width) {\r\n    start = start ?? end;\r\n    ctx.beginPath();\r\n    ctx.lineWidth = width;\r\n    ctx.strokeStyle = color;\r\n    ctx.moveTo(start.x, start.y);\r\n    ctx.lineTo(end.x, end.y);\r\n    ctx.stroke();\r\n\r\n    ctx.fillStyle = color;\r\n    ctx.beginPath();\r\n    ctx.arc(start.x, start.y, 2, 0, 2 * Math.PI);\r\n    ctx.fill();\r\n  }\r\n\r\n  function clearCanvas() {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n  }\r\n\r\n  function changeColor(newColor) {\r\n    setCurrentColor(newColor);\r\n  }\r\n\r\n  function saveDrawing() {\r\n    const canvas = canvasRef.current;\r\n    const svgData = canvas.toDataURL(\"image/svg+xml\");\r\n    setDrawings([...drawings, svgData]);\r\n    clearCanvas(); // Clear the canvas after saving\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <canvas\r\n        ref={canvasRef}\r\n        width={width}\r\n        height={height}\r\n        onMouseDown={onCanvasMouseDown}\r\n      />\r\n      <button className=\"canvas-button\" onClick={clearCanvas}>Clear</button>\r\n      <button className=\"canvas-button\" onClick={saveDrawing}>Add</button>\r\n      <button className=\"canvas-button\" onClick={() => changeColor('#FF0000')}>Red</button>\r\n      <button className=\"canvas-button\" onClick={() => changeColor('#00FF00')}>Green</button>\r\n      <button className=\"canvas-button\" onClick={() => changeColor('#0000FF')}>Blue</button>\r\n      <button className=\"canvas-button\" onClick={() => changeColor('#FFFF00')}>Yellow</button>\r\n\r\n      {drawings.length > 0 && (\r\n        <div>\r\n          <h2>Saved Drawings:</h2>\r\n          {drawings.map((svgData, index) => (\r\n            <div key={index}>\r\n              <img src={svgData} alt={`Drawing ${index}`} />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatternDraw;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}