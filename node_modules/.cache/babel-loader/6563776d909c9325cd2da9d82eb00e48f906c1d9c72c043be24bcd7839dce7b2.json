{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gonca\\\\Documents\\\\Curso\\\\MDM\\\\1o-Ano\\\\DW\\\\webdev-solo-project\\\\webdev-solo-project-app\\\\src\\\\Component\\\\CustomPatternGenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport '../App.css';\n// Importing the pattern images from different folders\nimport pattern1_1 from './patterns/pattern1/pattern1.png';\nimport pattern1_2 from './patterns/pattern1/pattern2.png';\nimport pattern1_3 from './patterns/pattern1/pattern3.png';\nimport pattern1_4 from './patterns/pattern1/pattern4.png';\nimport pattern2_1 from './patterns/pattern2/pattern1.png';\nimport pattern2_2 from './patterns/pattern2/pattern2.png';\nimport pattern2_3 from './patterns/pattern2/pattern3.png';\nimport pattern2_4 from './patterns/pattern2/pattern4.png';\nimport pattern3_1 from './patterns/pattern3/pattern1.png';\nimport pattern3_2 from './patterns/pattern3/pattern2.png';\nimport pattern3_3 from './patterns/pattern3/pattern3.png';\nimport pattern3_4 from './patterns/pattern3/pattern4.png';\nimport pattern4_1 from './patterns/pattern4/pattern1.png';\nimport pattern4_2 from './patterns/pattern4/pattern2.png';\nimport pattern4_3 from './patterns/pattern4/pattern3.png';\nimport pattern4_4 from './patterns/pattern4/pattern4.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomPatternGenerator = ({\n  imageArray\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    const numRows = 15; // Number of rows\n    const numCols = 30; // Number of columns\n    const squareSize = 75; // Size of each square\n\n    canvas.width = numCols * squareSize;\n    canvas.height = numRows * squareSize;\n\n    // Function to draw a square image with a specific rotation\n    function drawSquareImage(x, y, size, rotation, imageUrl) {\n      const img = new Image();\n      img.src = imageUrl;\n      img.onload = () => {\n        context.save();\n        context.translate(x, y);\n        context.rotate(rotation * Math.PI / 180); // Convert degrees to radians\n        context.drawImage(img, -size / 2, -size / 2, size, size);\n        context.restore();\n      };\n    }\n\n    // Define arrays of patterns (images) for each folder\n    const patternFolders = [[pattern1_1, pattern1_2, pattern1_3, pattern1_4], [pattern2_1, pattern2_2, pattern2_3, pattern2_4], [pattern3_1, pattern3_2, pattern3_3, pattern3_4], [pattern4_1, pattern4_2, pattern4_3, pattern4_4]];\n\n    // Generate the grid of squares with random rotations and images\n    const numberOfFolders = 4; // Number of pattern folders\n    const folderNumber = Math.floor(Math.random() * numberOfFolders); // Randomly choose a folder\n\n    for (let row = 0; row < numRows; row++) {\n      for (let col = 0; col < numCols; col++) {\n        const x = col * squareSize + squareSize / 2;\n        const y = row * squareSize + squareSize / 2;\n        const rotation = Math.floor(Math.random() * 4) * 90; // Random rotation in 90-degree increments\n        const randomValue = Math.random(); // Random value between 0 and 1\n\n        // Use the provided imageArray if available, otherwise use the default images from the selected folder\n        const imageUrl = imageArray && imageArray.length >= 1 ? imageArray[Math.floor(randomValue * imageArray.length)] : getRandomPatternFromFolder(randomValue, patternFolders[folderNumber]);\n        drawSquareImage(x, y, squareSize, rotation, imageUrl);\n      }\n    }\n  }, [imageArray]);\n\n  // Function to get a random image URL from the selected folder based on the random value\n  function getRandomPatternFromFolder(randomValue, folder) {\n    if (randomValue < 0.25) {\n      return folder[0];\n    } else if (randomValue < 0.50) {\n      return folder[1];\n    } else if (randomValue < 0.75) {\n      return folder[2];\n    } else {\n      return folder[3];\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    className: \"background\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 10\n  }, this);\n};\n_s(CustomPatternGenerator, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = CustomPatternGenerator;\nexport default CustomPatternGenerator;\nvar _c;\n$RefreshReg$(_c, \"CustomPatternGenerator\");","map":{"version":3,"names":["React","useEffect","useRef","pattern1_1","pattern1_2","pattern1_3","pattern1_4","pattern2_1","pattern2_2","pattern2_3","pattern2_4","pattern3_1","pattern3_2","pattern3_3","pattern3_4","pattern4_1","pattern4_2","pattern4_3","pattern4_4","jsxDEV","_jsxDEV","CustomPatternGenerator","imageArray","_s","canvasRef","canvas","current","context","getContext","numRows","numCols","squareSize","width","height","drawSquareImage","x","y","size","rotation","imageUrl","img","Image","src","onload","save","translate","rotate","Math","PI","drawImage","restore","patternFolders","numberOfFolders","folderNumber","floor","random","row","col","randomValue","length","getRandomPatternFromFolder","folder","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/gonca/Documents/Curso/MDM/1o-Ano/DW/webdev-solo-project/webdev-solo-project-app/src/Component/CustomPatternGenerator.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport '../App.css';\r\n// Importing the pattern images from different folders\r\nimport pattern1_1 from './patterns/pattern1/pattern1.png';\r\nimport pattern1_2 from './patterns/pattern1/pattern2.png';\r\nimport pattern1_3 from './patterns/pattern1/pattern3.png';\r\nimport pattern1_4 from './patterns/pattern1/pattern4.png';\r\n\r\nimport pattern2_1 from './patterns/pattern2/pattern1.png';\r\nimport pattern2_2 from './patterns/pattern2/pattern2.png';\r\nimport pattern2_3 from './patterns/pattern2/pattern3.png';\r\nimport pattern2_4 from './patterns/pattern2/pattern4.png';\r\n\r\nimport pattern3_1 from './patterns/pattern3/pattern1.png';\r\nimport pattern3_2 from './patterns/pattern3/pattern2.png';\r\nimport pattern3_3 from './patterns/pattern3/pattern3.png';\r\nimport pattern3_4 from './patterns/pattern3/pattern4.png';\r\n\r\nimport pattern4_1 from './patterns/pattern4/pattern1.png';\r\nimport pattern4_2 from './patterns/pattern4/pattern2.png';\r\nimport pattern4_3 from './patterns/pattern4/pattern3.png';\r\nimport pattern4_4 from './patterns/pattern4/pattern4.png';\r\n\r\nconst CustomPatternGenerator = ({ imageArray }) => {\r\n  const canvasRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const context = canvas.getContext('2d');\r\n    const numRows = 15; // Number of rows\r\n    const numCols = 30; // Number of columns\r\n    const squareSize = 75; // Size of each square\r\n\r\n    canvas.width = numCols * squareSize;\r\n    canvas.height = numRows * squareSize;\r\n\r\n    // Function to draw a square image with a specific rotation\r\n    function drawSquareImage(x, y, size, rotation, imageUrl) {\r\n      const img = new Image();\r\n      img.src = imageUrl;\r\n      img.onload = () => {\r\n        context.save();\r\n        context.translate(x, y);\r\n        context.rotate((rotation * Math.PI) / 180); // Convert degrees to radians\r\n        context.drawImage(img, -size / 2, -size / 2, size, size);\r\n        context.restore();\r\n      };\r\n    }\r\n\r\n    // Define arrays of patterns (images) for each folder\r\n    const patternFolders = [\r\n      [pattern1_1, pattern1_2, pattern1_3, pattern1_4],\r\n      [pattern2_1, pattern2_2, pattern2_3, pattern2_4],\r\n      [pattern3_1, pattern3_2, pattern3_3, pattern3_4],\r\n      [pattern4_1, pattern4_2, pattern4_3, pattern4_4],\r\n    ];\r\n\r\n    // Generate the grid of squares with random rotations and images\r\n    const numberOfFolders = 4; // Number of pattern folders\r\n    const folderNumber = Math.floor(Math.random() * numberOfFolders); // Randomly choose a folder\r\n\r\n    for (let row = 0; row < numRows; row++) {\r\n      for (let col = 0; col < numCols; col++) {\r\n        const x = col * squareSize + squareSize / 2;\r\n        const y = row * squareSize + squareSize / 2;\r\n        const rotation = Math.floor(Math.random() * 4) * 90; // Random rotation in 90-degree increments\r\n        const randomValue = Math.random(); // Random value between 0 and 1\r\n\r\n        // Use the provided imageArray if available, otherwise use the default images from the selected folder\r\n        const imageUrl = imageArray && imageArray.length >= 1\r\n          ? imageArray[Math.floor(randomValue * imageArray.length)]\r\n          : getRandomPatternFromFolder(randomValue, patternFolders[folderNumber]);\r\n\r\n        drawSquareImage(x, y, squareSize, rotation, imageUrl);\r\n      }\r\n    }\r\n  }, [imageArray]);\r\n\r\n  // Function to get a random image URL from the selected folder based on the random value\r\n  function getRandomPatternFromFolder(randomValue, folder) {\r\n    if (randomValue < 0.25) {\r\n      return folder[0];\r\n    } else if (randomValue < 0.50) {\r\n      return folder[1];\r\n    } else if (randomValue < 0.75) {\r\n      return folder[2];\r\n    } else {\r\n      return folder[3];\r\n    }\r\n  }\r\n\r\n  return <canvas ref={canvasRef} className='background'></canvas>;\r\n};\r\n\r\nexport default CustomPatternGenerator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}